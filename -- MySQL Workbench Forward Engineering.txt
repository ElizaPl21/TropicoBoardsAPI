-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tropi
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tropi
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tropi` DEFAULT CHARACTER SET utf8 ;
USE `tropi` ;

-- -----------------------------------------------------
-- Table `tropi`.`Products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tropi`.`Products` (
  `id_products` INT NOT NULL AUTO_INCREMENT,
  `product_name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(200) NOT NULL,
  `price` DECIMAL ZEROFILL NOT NULL,
  `stock` INT ZEROFILL NOT NULL,
  `image` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_products`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tropi`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tropi`.`Users` (
  `id_users` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_users`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tropi`.`Payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tropi`.`Payments` (
  `id_payments` INT NOT NULL AUTO_INCREMENT,
  `address` VARCHAR(45) NOT NULL,
  `card` INT NOT NULL,
  `Users_id_users` INT NOT NULL,
  PRIMARY KEY (`id_payments`),
  INDEX `fk_Payments_Users1_idx` (`Users_id_users` ASC) VISIBLE,
  CONSTRAINT `fk_Payments_Users1`
    FOREIGN KEY (`Users_id_users`)
    REFERENCES `tropi`.`Users` (`id_users`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tropi`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tropi`.`Orders` (
  `id_orders` INT NOT NULL AUTO_INCREMENT,
  `order_date` DATE NOT NULL,
  `order_status` VARCHAR(45) NOT NULL,
  `Users_id_users` INT NOT NULL,
  `Payments_id_payments` INT NOT NULL,
  PRIMARY KEY (`id_orders`),
  INDEX `fk_Orders_Users1_idx` (`Users_id_users` ASC) VISIBLE,
  INDEX `fk_Orders_Payments1_idx` (`Payments_id_payments` ASC) VISIBLE,
  CONSTRAINT `fk_Orders_Users1`
    FOREIGN KEY (`Users_id_users`)
    REFERENCES `tropi`.`Users` (`id_users`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Orders_Payments1`
    FOREIGN KEY (`Payments_id_payments`)
    REFERENCES `tropi`.`Payments` (`id_payments`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tropi`.`Products_has_Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tropi`.`Products_has_Orders` (
  `Products_id_products` INT NOT NULL,
  `Orders_id_orders` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`Products_id_products`, `Orders_id_orders`),
  INDEX `fk_Products_has_Orders_Orders1_idx` (`Orders_id_orders` ASC) VISIBLE,
  INDEX `fk_Products_has_Orders_Products1_idx` (`Products_id_products` ASC) VISIBLE,
  CONSTRAINT `fk_Products_has_Orders_Products1`
    FOREIGN KEY (`Products_id_products`)
    REFERENCES `tropi`.`Products` (`id_products`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Products_has_Orders_Orders1`
    FOREIGN KEY (`Orders_id_orders`)
    REFERENCES `tropi`.`Orders` (`id_orders`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
